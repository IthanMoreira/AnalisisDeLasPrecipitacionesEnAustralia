colnames (tab) <- c ('colName1', 'colName2', 'colName3')
rownames de fila (tab) <- c ('nombre_fila1', 'nombre_fila2', 'nombre_fila3')
tab <- as.table (tab)
tab <- matriz (c (7, 5, 14, 19, 3, 2, 17, 6, 12), ncol = 3 , byrow = TRUE )
colnames (tab) <- c ('colName1', 'colName2', 'colName3')
tab <- matriz (c (7, 5, 14, 19, 3, 2, 17, 6, 12), ncol = 3 , byrow = TRUE )
#create matrix with 4 column
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
(tab) <- c (' A ', ' B ', ' C ', ' D ')
rownames (tab) <- c (' F ', ' G ')
#convert matrix to table
tab <- as.table (tab)
#view table
pestaÃ±a
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
(tab) <- c (' A ', ' B ', ' C ', ' D ')
rownames (tab) <- c (' F ', ' G ')
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
tab
(tab) <- c (' A ', ' B ', ' C ', ' D ')
tab <- c (' A ', ' B ', ' C ', ' D ')
tab
rownames (tab) <- c (' F ', ' G ')
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
rownames (tab) <- c (' F ', ' G ')
tab <- as.table (tab)
tab
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
rownames (tab) <- c (' F ', ' G ')
tab
tab <- as.table (tab)
tab
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
(tab) <- c (' A ', ' B ', ' C ', ' D ')
rownames (tab) <- c (' F ', ' G ')
(tab) <- c (' A ', ' B ', ' C ', ' D ')
colnames  <- c (' A ', ' B ', ' C ', ' D ')
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames  <- c (' A ', ' B ', ' C ', ' D ')
rownames (tab) <- c (' F ', ' G ')
#convert matrix to table
tab <- as.table (tab)
tab <- matrix ( rep (2, times = 8 ), ncol = 4 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c (' A ', ' B ', ' C ', ' D ')
rownames (tab) <- c (' F ', ' G ')
#convert matrix to table
tab <- as.table (tab)
tab
tab <- as.df (tab)
tab <- matriz (c (7, 5, 14, 19, 3, 2, 17, 6, 12), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
tab <- matriz (c (7, 5, 14, 19, 3, 2, 17, 6, 12), ncol = 3 , byrow = TRUE )
tab <- matrix ( rep (2, times = 8 ), ncol = 3 , byrow = TRUE )
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c (' F ', ' G ')
tab <- matrix ( rep (2, times = 8 ), ncol = 3 , byrow = TRUE )
tab <- matrix ( rep (2, times = 6 ), ncol = 3 , byrow = TRUE )
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c (' F ', ' G ')
tab
tab <- as.table (tab)
tab
tab <- matrix ( rep (4, times = 12 ), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c (' F ', ' G ')
#convert matrix to table
tab <- as.table (tab)
tab <- matrix ( rep (4, times = 12 ), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c ('Pregunta 1','Pregunta 2','Pregunta 3','Pregunta 4')
#convert matrix to table
tab <- as.table (tab)
tab
rep (4, times = 12 )
tab <- matrix ( c(1,2,3,4,5,6,7,8,9,0,1,2), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c ('Pregunta 1','Pregunta 2','Pregunta 3','Pregunta 4')
#convert matrix to table
tab <- as.table (tab)
tab
df_muestraEstratificado %>% filter(Koppen=="Subtropical" & Lluvia>5.0 & Lluvia<10.0) %>%
summarise(media = n()/nrow(df_muestraEstratificado)*100 )
df_muestraEstratificado %>% filter(Sol<8) %>%
summarise(media = n()/nrow(df_muestraEstratificado)*100 )
tab <- matrix ( c(21.96,22.26,21.56,44.21,42.9,44.21,6.5,6.54,6.95,1.66,1.92,1.47), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab)  <- c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) <- c ('Pregunta 1','Pregunta 2','Pregunta 3','Pregunta 4')
#convert matrix to table
tab <- as.table (tab)
tab
rn(colnames)
rm(colnames)
tab = as.data.frame(tab)
tab
View(tab)
View(tab)
tab = as.table (tab)
tab = matrix ( c(21.96,22.26,21.56,44.21,42.9,44.21,6.5,6.54,6.95,1.66,1.92,1.47), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab) = c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) = c ('Pregunta 1','Pregunta 2','Pregunta 3','Pregunta 4')
#convert matrix to table
tab = as.table (tab)
tab
tab = matrix ( c(21.96,22.26,21.56,44.21,42.9,44.21,6.5,6.54,6.95,1.66,1.92,1.47), ncol = 3 , byrow = TRUE )
#define los nombres de las columnas y los nombres de las filas de los nombres de las columnas de la matriz
colnames (tab) = c ('df', ' df_muestra', 'df_muestraEstratificado')
rownames (tab) = c ('Pregunta 1','Pregunta 2','Pregunta 3','Pregunta 4')
tab
tab = as.data.frame(tab)
tab
df_muestraEstratificado%>% select(Temp9am)%>% t.test(conf.level=0.95)$conf.int
GfOtono
GfVerano=df_muestraEstratificado%>%  filter(Estacion=="Verano")%>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Estacion, y=media)) +
geom_bar( stat = "identity", alpha = 0.8) +
geom_hline(yintercept = 22.73771,
color = "#A61F3A", size=1)+
geom_hline(yintercept = 23.34432,
color = "#5A9A16", size=1)
GfInvierno=df_muestraEstratificado%>%  filter(Estacion=="Invierno")%>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Estacion, y=media)) +
geom_bar( stat = "identity", alpha = 0.8) +
geom_hline(yintercept = 12.68185,
color = "#A61F3A", size=1)+
geom_hline(yintercept =13.27242,
color = "#5A9A16", size=1)
GfPrimavera=df_muestraEstratificado%>%  filter(Estacion=="Primavera")%>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Estacion, y=media)) +
geom_bar( stat = "identity", alpha = 0.8) +
geom_hline(yintercept = 18.40465,
color = "#A61F3A", size=1)+
geom_hline(yintercept =19.06540,
color = "#5A9A16", size=1)
GfOtono=
df_muestraEstratificado%>%  filter(Estacion=="Oto\xf1o")%>%
select(Temp9am)%>%mutate(Estacion="Otono") %>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Estacion, y=media)) +
geom_bar( stat = "identity", alpha = 0.8) +
geom_hline(yintercept = 18.01701,
color = "#A61F3A", size=1)+
geom_hline(yintercept =18.63500,
color = "#5A9A16", size=1)
print(GfOtono)
print(GfOtono +GfPrimavera )
GfOtono ;GfVerano ;GfInvierno;GfPrimavera
df_muestraEstratificado%>%
select(LluviaHoy)%>% mutate(target=case_when(LluviaHoy==0~ "No",
LluviaHoy==1~"Si")) %>%
group_by(target) %>%summarise(contador = n()) %>% mutate(prop=contador/sum(contador)*100) %>%
ggplot(., aes(x = target, y=prop)) +
geom_bar( stat = "identity", alpha = 0.8) +
geom_hline(yintercept = 20.43964,
color = "#A61F3A", size=1)+
geom_hline(yintercept = 22.73849,
color = "#5A9A16", size=1)+
theme_minimal()
View(GfInvierno)
rm(GfOtono) ;rm(GfVerano) ;rm(GfInvierno);rm(GfPrimavera)
df <- read.csv("lluvia.csv")
dplyr::glimpse(df)
summary(df)
set.seed(200) #Semilla fijada en 200
df_muestra<-df %>%
dplyr::sample_n(size=5000, remplace = FALSE)
library(dplyr)
library(readr)
library(ggplot2)
library(SamplingUtil)
install.packages("tidyverse")
install.packages("remotes")
remotes::install_github("DFJL/SamplingUtil")
df_muestra %>% filter(Sol<8) %>%
summarise(media = n()/nrow(df_muestra)*100 )
library(dplyr)
library(readr)
library(ggplot2)
library(SamplingUtil)
df_muestra$LluviaHoy %>% mean()*100
df$LluviaHoy %>% mean()*100
df_muestra %>% filter(Sol<8) %>%
summarise(media = n()/nrow(df_muestra)*100 )
df %>% filter(Sol<8)%>% select(Sol) %>% summarise(media = n()/nrow(df)*100 )
df_muestra %>% filter(Temp3pm>20 & Estacion=="Invierno") %>% summarise(media = n()/nrow(df_muestra)*100 )
df %>% filter(Temp3pm>20 & Estacion=="Invierno") %>% summarise(media = n()/nrow(df)*100 )
library(SamplingUtil)
remotes::install_github("DFJL/SamplingUtil")
remotes::install_github("SamplingUtil")
install.packages("devtools")
library(devtools)
install_github("DFJL/SamplingUtil")
devtools::install_github("DFJL/SamplingUtil")
library(SamplingUtil)
df <- read.csv("lluvia.csv")
dplyr::glimpse(df)
summary(df)
set.seed(200) #Semilla fijada en 200
df_muestra<-df %>%
dplyr::sample_n(size=5000, remplace = FALSE)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
---
title: "188655750_JACKSON"
output: html_document
date: '2022-06-14'
---
---
title: "188655750_JACKSON"
output: html_document
date: '2022-06-14'
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
---
title: "188655750_JACKSON"
output: html_document
date: '2022-06-14'
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
set.seed(200) #Semilla fijada en 200
df_muestra = df %>% dplyr::sample_n(size=5000, remplace = FALSE)
descr(tab$edad, transpose = TRUE,
stats = c("N.Valid", "min","q1","med","mean","sd","q3","max","iqr"),
style = "rmarkdown", justify = "center", omit.headings = T)
descr(tab)
tab
View(tab)
html( tab,
options = htmloptions( HTMLcaption = "AGRICULTURA",
justification = "c",
pad = TRUE ) )
set.seed(200) ????
df_muestraEstratificado = df %>%   # Se selecciona la base de datos
filter(Koppen=="Desert") %>% dplyr::sample_n(size=NDesert, remplace = FALSE) %>%
add_row(df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=NGrassland, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=NSubtropical, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=NTemperate, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=NTropical, remplace = FALSE))
set.seed(200) ????
df_muestraEstratificado = df %>%   # Se selecciona la base de datos
filter(Koppen=="Desert") %>% dplyr::sample_n(size=NDesert, remplace = FALSE) %>%
add_row(df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=NGrassland, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=NSubtropical, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=NTemperate, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=NTropical, remplace = FALSE))
# Library -----------------------------------------------------------------
#install.packages("tidyverse")
#install.packages("devtools")
#library(devtools)
#devtools::install_github("DFJL/SamplingUtil")
library(dplyr)
library(readr)
library(ggplot2)
library(SamplingUtil)
# Pregunta 1 --------------------------------------------------------------
# Carga de la informaciÃ³n -------------------------------------------------
df = read.csv("lluvia.csv")
dplyr::glimpse(df)
summary(df)
set.seed(200) #Semilla fijada en 200
df_muestra<-df %>% dplyr::sample_n(size=5000, remplace = FALSE)
# Pregunta 2 --------------------------------------------------------------
#A - Probabilidad de que llueva hoy
df_muestra$LluviaHoy %>% mean()*100
#R//22.26 %
#Data Completa
df$LluviaHoy %>% mean()*100
#R//21.96 %
#------------------------------------------------------------------------------
#B - Probabilidad de que un dÃ­a tenga menos de 8 horas de sol
df_muestra %>% filter(Sol<8) %>% summarise(media = n()/nrow(df_muestra)*100 )
#R//42.9 %
#Data Completa
df %>% filter(Sol<8)%>% select(Sol) %>% summarise(media = n()/nrow(df)*100 )
#R//44.21 %
#------------------------------------------------------------------------------
#C - Probabilidad de que la temperatura a las 3pm sea sobre 20Â°C en invierno
df_muestra %>% filter(Temp3pm>20 & Estacion=="Invierno") %>% summarise(media = n()/nrow(df_muestra)*100 )
#R// 6.54 %
#Data Completa
df %>% filter(Temp3pm>20 & Estacion=="Invierno") %>% summarise(media = n()/nrow(df)*100 )
#R// 6.5 %
#------------------------------------------------------------------------------
#D - Probabilidad de que lluevan entre 5mm y 10mm, en un clima Koppen Subtropical
df_muestra %>% filter(Koppen=="Subtropical" & Lluvia>5.0 & Lluvia<10.0 ) %>%
summarise(media = n()/nrow(df_muestra)*100 )
#R// 1.92 %
#Data Completa
df %>% filter(Koppen=="Subtropical" & Lluvia>5.0 & Lluvia<10.0) %>% summarise(media = n()/nrow(df)*100 )
#R// 1.66 %
#------------------------------------------------------------------------------
# E- Repita las preguntas anteriores utilizando el conjunto completo de datos y comprare sus resultados.
#R//
#La muestra obtenida es representativa?,Â¿cÃ³mo mejorarÃ­a la muestra aleatoria?
#Si, pero se puede mejorar dando significancia a los estratos
#
#------------------------------------------------------------------------------
# Pregunta 3 --------------------------------------------------------------
#Muestra Estratos
df %>% select(Koppen) %>% table() %>% prop.table()
Estrato=SamplingUtil::nstrata(5000, wh = c(0.029850, 0.088250,0.356350,0.385875,0.139675))
#MuestraDesert
set.seed(200) #Semilla fijada en 200
MuestraDesert = df %>% filter(Koppen=="Desert") %>% dplyr::sample_n(size=Estrato[1], remplace = FALSE)
#MuestraDesert
set.seed(200) #Semilla fijada en 200
MuestraGrassland = df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=Estrato[2], remplace = FALSE)
#MuestraDesert
set.seed(200) #Semilla fijada en 200
MuestraSubtropical = df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=Estrato[3], remplace = FALSE)
#MuestraDesert
set.seed(200) #Semilla fijada en 200
MuestraTemperate = df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=Estrato[4], remplace = FALSE)
#MuestraDesert
set.seed(200) #Semilla fijada en 200
MuestraTropical = df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=Estrato[5], remplace = FALSE)
df_muestraEstratificado = rbind(MuestraDesert, MuestraGrassland, MuestraSubtropical,
MuestraTemperate, MuestraTropical)
rm(MuestraDesert); rm(MuestraGrassland); rm(MuestraSubtropical)
rm(MuestraTemperate); rm(MuestraTropical);rm(Estrato)
set.seed(200)
df_muestraEstratificado = df %>%   # Se selecciona la base de datos
filter(Koppen=="Desert") %>% dplyr::sample_n(size=NDesert, remplace = FALSE) %>%
add_row(df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=NGrassland, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=NSubtropical, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=NTemperate, remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=NTropical, remplace = FALSE))
df_muestraEstratificado = df %>%   # Se selecciona la base de datos
filter(Koppen=="Desert") %>% dplyr::sample_n(size=Estrato[1], remplace = FALSE) %>%
add_row(df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=Estrato[2], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=Estrato[3], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=Estrato[4], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=Estrato[5], remplace = FALSE))
Estrato=SamplingUtil::nstrata(5000, wh = c(0.029850, 0.088250,0.356350,0.385875,0.139675))
set.seed(200)
df_muestraEstratificado = df %>%   # Se selecciona la base de datos
filter(Koppen=="Desert") %>% dplyr::sample_n(size=Estrato[1], remplace = FALSE) %>%
add_row(df %>% filter(Koppen=="Grassland") %>% dplyr::sample_n(size=Estrato[2], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Subtropical") %>% dplyr::sample_n(size=Estrato[3], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Temperate") %>% dplyr::sample_n(size=Estrato[4], remplace = FALSE)) %>%
add_row(df %>% filter(Koppen=="Tropical") %>% dplyr::sample_n(size=Estrato[5], remplace = FALSE))
rm(Estrato)
df_muestraEstratificado%>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 40, alpha = 0.5)
df_muestraEstratificado%>%
select(Temp9am)
df_muestraEstratificado %>%
select(Temp9am)
source("C:/Users/ithan/Desktop/git_workSpace/Git/188655750_JACKSON/188655750_JACKSON.R", echo=TRUE)
df_muestraEstratificado %>%
select(Temp9am)
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 40, alpha = 0.5)
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 40, alpha = 0.5) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_hline(yintercept = 0.589,
color = "#A61F3A", size=1)+
geom_hline(yintercept = 0.646,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 40, alpha = 0.5) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 1, alpha = 0.5) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 100, alpha = 0.5) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 100, alpha = 0.1) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 100, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1)+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1,show.legend = "Intervalo")+
theme_minimal()
df_muestraEstratificado %>%
select(Temp9am) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 17.93521,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 18.30185,
color = "#5A9A16", size=1,show.legend = "Intervalo")+
theme_minimal()
df_muestraEstratificado%>%  filter(Estacion=="Verano")%>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 22.73771,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 23.34432,
color = "#5A9A16", size=1,show.legend = "Intervalo")+
theme_minimal()
df_muestraEstratificado%>%  filter(Estacion=="Verano") %>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am)) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 22.73771,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 23.34432,
color = "#5A9A16", size=1,show.legend = "Intervalo")+
theme_minimal()
df_muestraEstratificado%>%  filter(Estacion=="Verano") %>%
select(Temp9am,Estacion)%>% group_by(Estacion) %>% summarise(media = mean(Temp9am))
df_muestraEstratificado%>%  filter(Estacion=="Verano") %>%
select(Temp9am,Estacion) %>%
ggplot(., aes(x = Temp9am)) +
geom_histogram(position = "identity", bins = 150, alpha = 0.8) +
scale_fill_manual(values = c("#98ECAE", "#EC98A9"))+
geom_vline(xintercept = 22.73771,
color = "#A61F3A", size=1)+
geom_vline(xintercept = 23.34432,
color = "#5A9A16", size=1,show.legend = "Intervalo")+
theme_minimal()
